/* ***********************
*    Alex Helfrich       *
*    Comp 1302-04        *
*    StudentGUI Class    *
*    Mini-Project 3      *
*    LoginGUI Class      *
*********************** */

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.control.*;
import javafx.scene.text.*;
import javafx.event.*;
import javafx.geometry.*;

public class LoginGUI extends Application {
	//creating elements
	final Text title = new Text("Login");
	final Text labelID = new Text("ID:");
	final Text labelPW = new Text("Password:");
	final TextField fieldID = new TextField();
	final TextField fieldPW = new TextField();
	final Button patient = new Button();
	final Button dentist = new Button();

	
	@Override
	public void start(Stage stage) {
		//editing title element for topPane
		title.setFont(Font.font("", FontWeight.BOLD, 20));
		
		//editing elements for bottomPane
		enter.setText("Patient");
		enter.setLayoutX(130);
		enter.setLayoutY(-20);
		enter.setOnAction(e -> PatientForm.show(fieldID.getText(), fieldPW.getText()));
		
		enter.setText("Dentist");
		enter.setLayoutX(160);
		enter.setLayoutY(-20);
		enter.setOnAction(e -> DentistForm.show(fieldID.getText(), fieldPW.getText()));
		
		//repositioning elements for centerPane
		labelID.setLayoutX(20);
		labelPW.setLayoutX(20);
		
		labelID.setLayoutY(40);
		labelPW.setLayoutY(90);
		
		fieldID.setLayoutX(120);
		fieldPW.setLayoutX(120);
		
		fieldID.setLayoutY(20);
		fieldPW.setLayoutY(70);
		
		//creating panes
		BorderPane border = new BorderPane();
		StackPane topPane = new StackPane();
		Pane centerPane = new Pane();
		Pane bottomPane = new Pane();
		
		//adding elements to panes
		topPane.getChildren().addAll(title);
		centerPane.getChildren().addAll(labelID, labelPW, fieldID, fieldPW);
		bottomPane.getChildren().addAll(enter);
		
		//organizing borderpane
		border.setPadding(new Insets (10, 20, 10, 20));
		border.setTop(topPane);
		border.setCenter(centerPane);
		border.setBottom(bottomPane);
		
		//setting scene and stage
		Scene scene = new Scene(border, 340, 200);
		stage.setTitle("LoginGUI");
		stage.setScene(scene);
		stage.setResizable(false);
		stage.show();
	}
	
	public static void main(String[] args) { launch(args); } //end main
} //end class

/* ***********************
*    Alex Helfrich       *
*    Comp 1302-04        *
*    StudentGUI Class    *
*    Mini-Project 3      *
*    PatientForm Class   *
*********************** */

import javafx.application.Application;
import javafx.stage.*;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.control.*;
import javafx.scene.text.*;
import javafx.event.*;
import javafx.geometry.*;

public class PatientForm {
	private static String patID;
	private static String patPass;
	private static Text title = new Text("Patient Form");
	private static TextArea info = new TextArea();
	private static Button btn = new Button();
	public static void show(String IDIn, String passIn) {
		patID = new String(IDIn);
		patPass = new String(passIn);
		
		//creating panes
		BorderPane border = new BorderPane();
		StackPane topPane = new StackPane();
		Pane centerPane = new Pane();
		Pane bottomPane = new Pane();
				
		//adding elements to panes
		topPane.getChildren().addAll(title);
		centerPane.getChildren().addAll(info);
		bottomPane.getChildren().addAll(btn);

		//organizing borderpane
		border.setPadding(new Insets (10, 20, 10, 20));
		border.setTop(topPane);
		border.setCenter(centerPane);
		border.setBottom(bottomPane);
		
		//setting scene and stage
		Stage stage = new Stage();
		stage.initModality(Modality.APPLICATION_MODAL);
		stage.setTitle("Patient Form");
		Scene scene = new Scene(border, 340, 350);
		stage.setScene(scene);
		stage.showAndWait();;
		
		//Check if the patient ID exists and displays it
		//If not, display a window telling the user to enter a correct ID
		if(patID.startsWith("P")) {
			Patient pat1 = new Patient();
			pat1.select(patID);
			if ((pat1.getPassword() != null) && (patPass.compareTo(pat1.getPassword()) == 0)) {
				btn.setText("Display Appointment");
				btn.setOnAction(e -> AppointmentInfo.show(patID, patPass));
				info.setText(pat1.getFirstName() + " " + pat1.getLastName() + "\n" +
							 pat1.getEmail() + "\n" + pat1.getAddr() + "\n" +
							 pat1.getInsCo());
			}
		}
	}	
}

/* ***************************
*    Alex Helfrich           *
*    Comp 1302-04            *
*    StudentGUI Class        *
*    Mini-Project 3          *
*    Appointment Info Class  *
*************************** */

import javafx.application.Application;
import javafx.stage.*;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.control.*;
import javafx.scene.text.*;
import javafx.event.*;
import javafx.geometry.*;

public class AppointmentInfo {
	private static String patID;
	private static String patPass;
	private static Text title = new Text("AppointmentInfo");
	private static TextArea info = new TextArea();
	public static void show(String IDIn, String passIn) {
		patID = new String(IDIn);
		patPass = new String(passIn);
		
		//creating panes
		BorderPane border = new BorderPane();
		StackPane topPane = new StackPane();
		Pane centerPane = new Pane();
		Pane bottomPane = new Pane();
				
		//adding elements to panes
		topPane.getChildren().addAll(title);
		centerPane.getChildren().addAll(info);

		//organizing borderpane
		border.setPadding(new Insets (10, 20, 10, 20));
		border.setTop(topPane);
		border.setCenter(centerPane);
		border.setBottom(bottomPane);
		
		//setting scene and stage
		Stage stage = new Stage();
		stage.initModality(Modality.APPLICATION_MODAL);
		stage.setTitle("Patient Form");
		Scene scene = new Scene(border, 340, 350);
		stage.setScene(scene);
		stage.showAndWait();;
		
		//Displays the appointment for the patient, if it exists
		Patient pat1 = new Patient();
		pat1.select(patID);
		if (pat1.getApt() != null) {
			info.setText(pat1.getApt().toString());
		}
		
	}	
}

/* ***********************
*    Alex Helfrich       *
*    Comp 1302-04        *
*    StudentGUI Class    *
*    Mini-Project 3      *
*    DentistForm Class   *
*********************** */

import javafx.application.Application;
import javafx.stage.*;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.control.*;
import javafx.scene.text.*;
import javafx.event.*;
import javafx.geometry.*;

public class DentistForm {
	private static String dentID;
	private static String dentPass;
	private static Text title = new Text("Dentist Form");
	private static TextArea info = new TextArea();
	private static Button btn = new Button();
	public static void show(String IDIn, String passIn) {
		dentID = new String(IDIn);
		dentPass = new String(passIn);
		
		//creating panes
		BorderPane border = new BorderPane();
		StackPane topPane = new StackPane();
		Pane centerPane = new Pane();
		Pane bottomPane = new Pane();
				
		//adding elements to panes
		topPane.getChildren().addAll(title);
		centerPane.getChildren().addAll(info);
		bottomPane.getChildren().addAll(btn);

		//organizing borderpane
		border.setPadding(new Insets (10, 20, 10, 20));
		border.setTop(topPane);
		border.setCenter(centerPane);
		border.setBottom(bottomPane);
		
		//setting scene and stage
		Stage stage = new Stage();
		stage.initModality(Modality.APPLICATION_MODAL);
		stage.setTitle("Dentist Form");
		Scene scene = new Scene(border, 340, 350);
		stage.setScene(scene);
		stage.showAndWait();;
		
		//Check if the dentist ID exists and displays it
		//If not, display a window telling the user to enter a correct ID
		if(patID.startsWith("D")) {
			Dentist dent1 = new Dentist();
			dent1.select(dentID);
			if ((dent1.getPassword() != null) && (dentPass.compareTo(dent1.getPassword()) == 0)) {
				btn.setText("Display Appointments");
				btn.setOnAction(e -> DentistInfo.show(dentID, dentPass));
				info.setText(dent1.getFirstName() + " " + dent1.getLastName() + "\n" +
							 dent1.getEmail() + "\n" + dent1.getOffice());
			}
		}
	}	
}

/* ***********************
*    Alex Helfrich       *
*    Comp 1302-04        *
*    StudentGUI Class    *
*    Mini-Project 3      *
*    DentistInfo Class   *
*********************** */

import javafx.application.Application;
import javafx.stage.*;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.control.*;
import javafx.scene.text.*;
import javafx.event.*;
import javafx.geometry.*;

public class DentistInfo {
	private static String dentID;
	private static String dentPass;
	private static Text title = new Text("Dentist Info");
	private static TextArea info = new TextArea();
	public static void show(String IDIn, String passIn) {
		dentID = new String(IDIn);
		dentPass = new String(passIn);
		
		//creating panes
		BorderPane border = new BorderPane();
		StackPane topPane = new StackPane();
		Pane centerPane = new Pane();
		Pane bottomPane = new Pane();
				
		//adding elements to panes
		topPane.getChildren().addAll(title);
		centerPane.getChildren().addAll(info);

		//organizing borderpane
		border.setPadding(new Insets (10, 20, 10, 20));
		border.setTop(topPane);
		border.setCenter(centerPane);
		border.setBottom(bottomPane);
		
		//setting scene and stage
		Stage stage = new Stage();
		stage.initModality(Modality.APPLICATION_MODAL);
		stage.setTitle("Dentist Form");
		Scene scene = new Scene(border, 340, 350);
		stage.setScene(scene);
		stage.showAndWait();;
		
		//Displays the appointments for the dentist
		Dentist dent1 = new Dentist();
		dent1.select(dentID);
		if (dent1.getApt() != null) {
			info.setText(dent1.toString());
		}
		
	}	
}